package todolist;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Sanja
 */


public class ToDoList extends javax.swing.JFrame {

    /**
     * Creates new form ToDoList
     */
     Connection con;
    Statement stmt;
    PreparedStatement pst;
    ResultSet rs;
    
    
    public ToDoList() {
        initComponents();
        Connect();
        task();
    }

    public final void Connect() {
   
      try {
          String url = "jdbc:sqlite:ToDO.db";
          // String  url="jdbc:sqlite:C:/User/Sanja/Documents/NetBeansProjects/ToDoList/src/todolist/ToDO.db";            
            con=DriverManager.getConnection(url);
    
            stmt = con.createStatement();
        System.out.println("success"); }     
    catch (SQLException e) {
        System.out.println("failed");        
    } }
    
   public void task() {
    try {
        DefaultListModel<String> model = new DefaultListModel<>();
        pst = con.prepareStatement("SELECT * FROM tasks");
        rs = pst.executeQuery();
        while (rs.next()) {
            model.addElement(rs.getString("task"));
        }
        spisak.setModel(model); // Postavi model na JList
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        unos = new javax.swing.JTextPane();
        naslov = new java.awt.Label();
        submit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        spisak = new javax.swing.JList<>();
        remove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(255, 255));

        jScrollPane1.setViewportView(unos);

        naslov.setAlignment(java.awt.Label.CENTER);
        naslov.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        naslov.setText("INPUT TASK:");
        naslov.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                naslovAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        submit.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        submit.setText("SUBMIT");
        submit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitMouseClicked(evt);
            }
        });

        spisak.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        spisak.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        spisak.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spisakMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(spisak);

        remove.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        remove.setText("REMOVE FROM TASKS");
        remove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(remove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(naslov, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(naslov, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(remove, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void naslovAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_naslovAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_naslovAncestorMoved

    private void submitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitMouseClicked
        // TODO add your handling code here:
        String todo = unos.getText();
        if (todo.trim().isEmpty()) {
             JOptionPane.showMessageDialog(this, "Task cannot be empty!");
         return;
        }
            try {
            pst = con.prepareStatement("INSERT INTO tasks(task) VALUES(?)");
         
           pst.setString(1,todo);
        
            int k = pst.executeUpdate();

            if (k == 1) {
                JOptionPane.showMessageDialog(this, "Task added!");
             //   spisak.setText("");
               
              //  spisak.requestFocus();
    }                                   
        }catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
}
    task();
    unos.setText("");
        
        
        
        
        
    }//GEN-LAST:event_submitMouseClicked

     @SuppressWarnings("empty-statement")
    private void spisakMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spisakMouseClicked
        // TODO add your handling code here:
        String todo;
       
       
           try{
            pst = con.prepareStatement("SELECT task FROM tasks");
         rs=pst.executeQuery();
        
           }
           catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
}
            
       
        
    }//GEN-LAST:event_spisakMouseClicked

    private void removeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeMouseClicked
        // TODO add your handling code here:
            try{
                pst = con.prepareStatement("DELETE FROM tasks WHERE task=?");
            pst.setString(1, spisak.getSelectedValue());

     
      
         
         int k = pst.executeUpdate();
           

           if (k == 1) {
        JOptionPane.showMessageDialog(this, "Task deleted!");
    } else {
        JOptionPane.showMessageDialog(this, "Task not found!");
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
}
            
            task();
          
    }//GEN-LAST:event_removeMouseClicked

    
       

       
         
       
        
             
    
    
    
    
    
    /**
     * 
     * 
     * 
     * 
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ToDoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ToDoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ToDoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ToDoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ToDoList().setVisible(true);
            }
        });
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Label naslov;
    private javax.swing.JButton remove;
    private javax.swing.JList<String> spisak;
    private javax.swing.JButton submit;
    private javax.swing.JTextPane unos;
    // End of variables declaration//GEN-END:variables
}
